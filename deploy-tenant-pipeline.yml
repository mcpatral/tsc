trigger: none

parameters:
  - name: tenantName
    displayName: Variable group name for tenant to deploy
    type: string
  - name: environmentName
    displayName: Variable group name for environment to deploy
    type: string
    default: d
  - name: runDeploymentCheck
    displayName: Run Deployment check test once deployed
    type: boolean
    default: true

variables:
  - group: ${{ parameters.tenantName }}
  - group: ${{ parameters.environmentName }}
  - name: terraformVersion
    value: "1.5.0"
  - name: kubectlVersion
    value: "1.27.3"
  - name: helmVersion
    value: "3.12.1"
  - name: azureDevOpsPool
    value: ${{ parameters.environmentName }}-agentpool
  - name: enablersModule
    value: enablers
  - name: infrastructureModule
    value: infrastructure
  - name: contentModule
    value: content
  - name: databricksAirflowPatTokenName
    value: 'airflowdbwpattoken'
  - name: saAirflowKeyName
    value: 'saairflowkey'
  - name: terraformResourceGroupName
    value: rg-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-state
  - name: terraformSaName
    value: sa$(terraform_in_environment_type)$(terraform_in_project)$(terraform_in_location_short)tfstate
  - name: terraformBackendContainerName
    value: $(terraform_in_environment_type)tfstate
  - name: terraformBackendKeyName
    value: $(terraform_in_tenant_name).tfstate
  - name: terraformPlanContainerName
    value: $(terraform_in_environment_type)tfplan
  - name: mainKeyVaultName
    value: kv-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-main
  - name: mainResourceGroupName
    value: rg-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)
  - name: testRepositoryCheckout
    value: 'test-suite'  
  - name: devopsRepositoryCheckout
    value: 'self'
  - name: dagsRepositoryCheckout
    value: 'airflow-dags'
  - name: mavenPomFile
    value: 'test-suite/pom.xml'
  - name: mavenGoal
    value: 'clean test'
  - name: mavenProfile
    value: 'deployment_check'
  - name: dagsPausedAtCreation
    value: "true"

resources:
  repositories:
  - repository: airflow-dags
    type: git
    name: igtpoc/airflow-dags
    ref: main
  - repository: test-suite
    type: git
    name: igtpoc/test-suite
    ref: main

stages:
  - template: azure_pipelines/terraform-stages.yml
    parameters:
      module: tenant
      azureServiceConnectionName: $(azure_service_principal_name)
      terraformVersion: ${{ variables.terraformVersion }}
      kubectlVersion: ${{ variables.kubectlVersion }}
      helmVersion: ${{ variables.helmVersion }}
      terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
      terraformSaName: ${{ variables.terraformSaName }}
      terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}
      terraformBackendKeyName: ${{ variables.terraformBackendKeyName }}
      terraformPlanContainerName: ${{ variables.terraformPlanContainerName }}
      keyVaultName: ${{ variables.mainKeyVaultName }}
      pool: ${{ variables.azureDevOpsPool }} 
      saPublicAccessUpdate: false
      mainResourceGroupName: ${{ variables.mainResourceGroupName }}

  - template: azure_pipelines/airflow-stages.yml
    parameters:
      pool: ${{ variables.azureDevOpsPool }} 
      azureServiceConnectionName: $(azure_service_principal_name)
      terraformVersion: ${{ variables.terraformVersion }}
      kubectlVersion: ${{ variables.kubectlVersion }}
      helmVersion: ${{ variables.helmVersion }}
      osmVersion: $(osm_version)
      dnsZoneSubscriptionID: $(private_dns_zone_subscription_id)
      dnsZoneResourceGroupName: $(private_dns_zone_resource_group)
      resourceGroupName: ${{ variables.mainResourceGroupName }}
      terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
      terraformSaName: ${{ variables.terraformSaName }}
      terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}
      keyVaultName: ${{ variables.mainKeyVaultName }}
      keyVaultSecretNames:
        - airflowoauthspnclientid
        - airflowoauthspnclientsecret
        - airflowtenantid     
        - psqlairflowuser
        - psqlairflowpwd
        - airflowfernetkey
        - airflowpwd 
        - ${{ variables.databricksAirflowPatTokenName }}
        - ${{ variables.saAirflowKeyName }}
        - clienttlskey
        - clienttlscrt
        - airflowsmtpclientsecret
        - airflowsmtpclientid
      saPublicAccessUpdate: false
      airflowTag: $(airflow_tag)
      pgBouncerTag: $(pg_bouncer_tag)
      envoySidecarHelperTag: $(envoy_helper_tag)
      helmReleaseName: $(airflow_tenant_helm_release_name)
      helmNamespace: $(airflow_tenant_namespace)
      tenantName: $(terraform_in_tenant_name)
      ingressPath: /$(terraform_in_tenant_name)
      ingressControllerName: $(ingress_helm_release_name)
      ingressControllerNamespace: $(ingress_namespace)
      enablersModule: ${{ variables.enablersModule }}
      infrastructureModule: ${{ variables.infrastructureModule }}
      contentModule: ${{ variables.contentModule }}
      databricksPatTokenName: ${{ variables.databricksAirflowPatTokenName }}
      airflowViewerGroupName: $(airflow_viewer_group_name)
      airflowUserGroupName: $(airflow_user_group_name)
      airflowAdminGroupName: $(airflow_admin_group_name)
      vnetPeered: $(terraform_in_vnet_peered)
      mainEnvironmentDeployment: "false"
      maxParallelDags: $(airflow_max_parallel_dags)
      dagsPausedAtCreation: ${{ variables.dagsPausedAtCreation }}
      maxConcurency: $(airflow_max_concurency)
      dependsOn:
        - tenant

  - template: azure_pipelines/deploy-dags-steps.yml
    parameters:
      azureServiceConnectionName: $(azure_service_principal_name)
      terraformVersion: ${{ variables.terraformVersion }}
      terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
      terraformSaName:  ${{ variables.terraformSaName }}
      terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}
      infrastructureModule: ${{ variables.infrastructureModule }}
      pool: ${{ variables.azureDevOpsPool }}
      dagsRepositoryCheckout: ${{ variables.dagsRepositoryCheckout }}
      devopsRepositoryCheckout: ${{ variables.devopsRepositoryCheckout }}
      dagsStorageAccount: $(terraform_out_sa_name_airflow)
      dagsStorageAccountContainer: dags$(terraform_in_tenant_name)
      performReleaseCheckout: false
      dependsOn:
        - airflow_deployment

  - ${{ if parameters.runDeploymentCheck }}:
    - template: azure_pipelines/test-suite-multi-stages.yml
      parameters:
        azureServiceConnectionName: $(azure_service_principal_name)
        terraformVersion: ${{ variables.terraformVersion }}
        terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
        terraformSaName:  ${{ variables.terraformSaName }}
        terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}
        mainResourceGroupName: ${{ variables.mainResourceGroupName }}
        kvTestSuiteResourceGroupName: $(kv_test_central_rg)
        enablersModule: ${{ variables.enablersModule }}
        infrastructureModule: ${{ variables.infrastructureModule }}
        contentModule: ${{ variables.contentModule }}
        mainKeyVaultName: ${{ variables.mainKeyVaultName }}
        mainKeyVaultSecretNames:
          - airflowdbwspclientid
          - airflowdbwspclientsecret
          - airflowpwd
        testKeyVaultName: $(kv_test_central_name)
        testKeyVaultSecretNames: 
          - airflowsptenantid
          - airflowtestuser
          - warehouseId
          - dbwresourceid
        saPublicAccessUpdate: false
        mavenOptions: >-
          -DairflowUrl=https://airflow.$(terraform_out_private_dns_zone_name_intrum)/$(terraform_in_tenant_name)/api/v1 
          -DairflowUsername=$(airflowtestuser) 
          -DairflowPassword=$(airflowpwd) 
          -DdatabricksUrl=$(terraform_out_db_workspace_host)
          -DdataBricksClusterId=$(terraform_out_databricks_single_cluster_id)
          -DdataBricksWareHouseID=$(warehouseId)
          -DdataBricksConnCatalog=$(terraform_out_catalog_name)
          -DdataBricksDevopsClientId=$(airflowdbwspclientid)
          -DdataBricksDevopsSecret=$(airflowdbwspclientsecret)
          -DdataBricksSchemas=$(terraform_in_databricks_schemas)
          -DdataBricksResourceId=$(dbwresourceid)
          -DtenantId=$(airflowsptenantid)
          -DstorageAccount=$(terraform_out_sa_name_dl) 
          -DsaTempName=$(terraform_out_sa_name_temp) 
          -P ${{ variables.mavenProfile }}
        mavenPomFile: ${{ variables.mavenPomFile }}
        mavenGoal: ${{ variables.mavenGoal }}
        pool: ${{ variables.azureDevOpsPool }}
        testRepositoryCheckout: ${{ variables.testRepositoryCheckout }}
        devopsRepositoryCheckout: ${{ variables.devopsRepositoryCheckout }}
        firstBlockProfiles: ['deployment_check']
        dependsOn:
          - deploy_dags