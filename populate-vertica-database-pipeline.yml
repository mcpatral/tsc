parameters:
  - name: environmentName
    displayName: Variable group name for environment to deploy
  - name: runDdlGenerator
    displayName: 'Run DDL generator for sql files'
    type: boolean
    default: false
  - name: additionalArgsDdlGenerator
    displayName: 'Additional arguments for DDL generator'
    type: string
    default: ' '
  - name: usePairInfrastructure
    displayName: Use Pair Infrastructure
    default: false
    type: boolean

variables:
  - group: ${{ parameters.environmentName }}
  - name: terraformVersion
    value: "1.5.0"
  - name: kubectlVersion
    value: "1.27.3"
  - name: terraformResourceGroupName
    value: rg-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-state
  - name: terraformSaName
    value: sa$(terraform_in_environment_type)$(terraform_in_project)$(terraform_in_location_short)tfstate
  - name: terraformBackendContainerName
    value: $(terraform_in_environment_type)tfstate
  - name: keyVaultName
    value: kv-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-main
  - name: verticaClientVersion
    value: "12.0.4-0"
  - name: verticaDatabasePort
    value: "5433"
  - name: pyDdlScriptsDependenciesRequirementsPath
    value: 'python/vertica-ddl-scripts/requirements_dependencies.txt'
  - name: pyDdlScriptsRequirementsPath
    value: 'python/vertica-ddl-scripts/requirements.txt'
  - name: ddlGeneratorPath
    value: 'vertica_ddl_generator/vertica_ddl_generator.py'
  - name: ddlExecutorPath
    value: 'vertica_ddl_executor/run_ddls.sh'
  - name: verticaEncryptEnabler
    value: 'vertica_encrypt/enable.sh'

  - ${{ if parameters.usePairInfrastructure }}:
    - name: azureDevOpsPool
      value: ${{ parameters.environmentName }}-pair-agentpool
    - name: locationInfraShort
      value: $(terraform_in_pair_location_short)
    - name: enablersModule
      value: pair_enablers
    - name: infrastructureModule
      value: pair_infrastructure
  - ${{ else }}:
    - name: azureDevOpsPool
      value: ${{ parameters.environmentName }}-agentpool
    - name: locationInfraShort
      value: $(terraform_in_location_short)
    - name: enablersModule
      value: enablers
    - name: infrastructureModule
      value: infrastructure

trigger: none

stages:
  - template: azure_pipelines/populate-vertica-database-stages.yml
    parameters:
      azureServiceConnectionName: $(azure_service_principal_name)
      terraformVersion: ${{ variables.terraformVersion }}
      kubectlVersion: ${{ variables.kubectlVersion }}
      terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
      terraformSaName: ${{ variables.terraformSaName }}
      terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}
      verticaClientVersion: ${{ variables.verticaClientVersion }}
      verticaDatabasePort: ${{ variables.verticaDatabasePort }}
      pool: ${{ variables.azureDevOpsPool }}
      enablersModule: ${{ variables.enablersModule }}
      keyVaultName: ${{ variables.keyVaultName }}
      keyVaultSecretNames: 
        - verticasuname
        - verticasupassword
        - verticatlskey
        - verticatlscrt
      infrastructureModule: ${{ variables.infrastructureModule }}
      runDdlGenerator: ${{ parameters.runDdlGenerator }}
      additionalArgsDdlGenerator: ${{ parameters.additionalArgsDdlGenerator }}
      ddlGeneratorPath: ${{ variables.ddlGeneratorPath }}
      ddlExecutorPath: ${{ variables.ddlExecutorPath }}
      verticaEncryptEnabler: ${{ variables.verticaEncryptEnabler }}
      pyDdlScriptsDependenciesRequirementsPath: ${{ variables.pyDdlScriptsDependenciesRequirementsPath }}
      pyDdlScriptsRequirementsPath: ${{ variables.pyDdlScriptsRequirementsPath }}
