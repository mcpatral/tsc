parameters:
- name: environmentName
  displayName: Environment variable group name
  type: string
- name: usePairInfrastructure
  displayName: Use Pair Infrastructure
  default: false
  type: boolean
- name: rotateDbwToken
  type: boolean
  default: true
  displayName: Rotate Databricks Token

- name: removeTheRestOfTokens
  displayName: Remove the rest of the tokens
  type: boolean
  default: false

variables:
- group: ${{ parameters.environmentName }}
- name: azureDevOpsPool
  value: ${{ parameters.environmentName }}-agentpool
- name: terraformVersion
  value: "1.5.0"
- name: kubectlVersion
  value: "1.27.3"
- name: helmVersion
  value: "3.12.1"
- name: terraformResourceGroupName
  value: rg-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-state
- name: terraformSaName
  value: sa$(terraform_in_environment_type)$(terraform_in_project)$(terraform_in_location_short)tfstate
- name: terraformBackendContainerName
  value: $(terraform_in_environment_type)tfstate
- name: mainKeyVaultName
  value: kv-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-main
- ${{ if eq(parameters.usePairInfrastructure, false) }}:
  - name: azureDevOpsPool
    value: ${{ parameters.environmentName }}-agentpool
  - name: locationInfraShort
    value: $(terraform_in_location_short)
  - name: enablersModule
    value: enablers
  - name: infrastructureModule
    value: infrastructure
  - name: databricksAirflowPatTokenName
    value: 'airflowdbwpattoken'
  - name: databricksAirflowPatTokenId
    value: 'airflowdbwidpattoken'
  - name: saAirflowKeyName
    value: 'saairflowkey'
- ${{ if eq(parameters.usePairInfrastructure, true) }}:
  - name: azureDevOpsPool
    value: ${{ parameters.environmentName }}-pair-agentpool
  - name: locationInfraShort
    value: $(terraform_in_pair_location_short)
  - name: enablersModule
    value: pair_enablers
  - name: infrastructureModule
    value: pair_infrastructure
  - name: databricksAirflowPatTokenName
    value: 'airflowdbwpattokenpair'
  - name: databricksAirflowPatTokenId
    value: 'airflowdbwidpattoken'
  - name: saAirflowKeyName
    value: 'saairflowkeypair'
- name: mainResourceGroupName
  value: rg-$(terraform_in_environment_type)-$(terraform_in_project)-$(locationInfraShort)
- name: lifetimeSeconds
  value: 7776000 #90 days

trigger: none
  
stages: 
- ${{ if eq(parameters.rotateDbwToken, true) }}:
  - template: azure_pipelines/rotate-databricks-token-stages.yml
    parameters:
      deleteToken: false
      azureServiceConnectionName: $(azure_service_principal_name)
      terraformVersion: ${{ variables.terraformVersion }}
      terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
      terraformSaName: ${{ variables.terraformSaName }}
      terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}
      stageName: rotate_token
      stageDisplayName: 'Rotate token stage'
      pool: ${{ variables.azureDevOpsPool }}
      resourceGroupName: ${{ variables.mainResourceGroupName }}
      keyVaultName: ${{ variables.mainKeyVaultName }}
      lifetimeSeconds: ${{ variables.lifetimeSeconds }}
      databricksPatTokenName: ${{ variables.databricksAirflowPatTokenName }}
      databricksPatTokenId: ${{ variables.databricksAirflowPatTokenId }}
      infrastructureModule: ${{ variables.infrastructureModule }}

  - template: azure_pipelines/airflow-stages.yml
    parameters:
      pool: ${{ variables.azureDevOpsPool }} 
      azureServiceConnectionName: $(azure_service_principal_name)
      terraformVersion: ${{ variables.terraformVersion }}
      kubectlVersion: ${{ variables.kubectlVersion }}
      helmVersion: ${{ variables.helmVersion }}
      osmVersion: $(osm_version)
      dnsZoneSubscriptionID: $(private_dns_zone_subscription_id)
      dnsZoneResourceGroupName: $(private_dns_zone_resource_group)
      terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
      terraformSaName: ${{ variables.terraformSaName }}
      terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}
      keyVaultName: ${{ variables.mainKeyVaultName }}
      keyVaultSecretNames:
        # - verticadbwritername
        # - verticadbwriterpassword   
        - airflowoauthspnclientid
        - airflowoauthspnclientsecret
        - airflowtenantid   
        - psqlairflowuser
        - psqlairflowpwd
        - airflowfernetkey
        - airflowpwd 
        - ${{ variables.databricksAirflowPatTokenName }}
        - ${{ variables.saAirflowKeyName }}
        - clienttlskey
        - clienttlscrt
        - airflowsmtpclientsecret
        - airflowsmtpclientid
      saPublicAccessUpdate: false
      airflowTag: $(airflow_tag)
      pgBouncerTag: $(pg_bouncer_tag)
      envoySidecarHelperTag: $(envoy_helper_tag)
      helmReleaseName: $(airflow_helm_release_name)
      helmNamespace: $(airflow_namespace)
      ingressControllerName: $(ingress_helm_release_name)
      ingressControllerNamespace: $(ingress_namespace)
      # verticaNamespace: $(vertica_namespace)
      enablersModule: ${{ variables.enablersModule }}
      infrastructureModule: ${{ variables.infrastructureModule }}
      databricksPatTokenName: ${{ variables.databricksAirflowPatTokenName }}
      airflowViewerGroupName: $(airflow_viewer_group_name)
      airflowUserGroupName: $(airflow_user_group_name)
      airflowAdminGroupName: $(airflow_admin_group_name)
      vnetPeered: $(terraform_in_vnet_peered)
      condition: and(not(failed()), not(canceled()))
      dependsOn:
        - rotate_token

  - template: azure_pipelines/rotate-databricks-token-stages.yml
    parameters:
      deleteToken: true
      azureServiceConnectionName: $(azure_service_principal_name)
      terraformVersion: ${{ variables.terraformVersion }}
      terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
      terraformSaName: ${{ variables.terraformSaName }}
      terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}
      removeTheRestOfTokens: ${{ parameters.removeTheRestOfTokens }}
      stageName: delete_previous_token
      stageDisplayName: 'Delete previous Token'
      pool: ${{ variables.azureDevOpsPool }}
      resourceGroupName: ${{ variables.mainResourceGroupName }}
      infrastructureModule: ${{ variables.infrastructureModule }}
      databricksPatTokenName: ${{ variables.databricksAirflowPatTokenName }}
      databricksPatTokenId: ${{ variables.databricksAirflowPatTokenId }}
      dependsOn:
        - rotate_token
        - airflow_deployment