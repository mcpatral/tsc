trigger: none

schedules:
- cron: '30 18 * * 1-5'
  displayName: Stop
  always: true
  branches:
    include:
    - main

parameters:
  - name: environmentName
    displayName: Variable group name for environment to deploy
    type: string
    default: d

variables:
  - group: ${{ parameters.environmentName }}
  - name: terraformVersion
    value: "1.5.0"
  - name: kubectlVersion
    value: "1.27.3"
  - name: helmVersion
    value: "3.12.1"
  - name: terraformResourceGroupName
    value: rg-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-state
  - name: terraformSaName
    value: sa$(terraform_in_environment_type)$(terraform_in_project)$(terraform_in_location_short)tfstate
  - name: terraformBackendContainerName
    value: $(terraform_in_environment_type)tfstate
  - name: mainKeyVaultName
    value: kv-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-main  
  - name: paasResourceGroupName
    value: rg-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)
  - name: azureDevOpsPool
    value: ${{ parameters.environmentName }}-agentpool
  - name: paasResourceGroupName
    value: rg-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)    

stages:
- stage: Stop_env
  displayName: Stop environment
  pool: 
    vmImage: ubuntu-latest
  jobs:
    - job: Stop_env
      displayName: Stop environments
      steps:
      - template: azure_pipelines/templates/azcli/sa-update-public-network-access.yml
        parameters:
          azureServiceConnectionName: $(azure_service_principal_name)
          resourceGroupName:  ${{ variables.terraformResourceGroupName }}
          workingDirectory: $(System.DefaultWorkingDirectory)
          saName: ${{ variables.terraformSaName }}
          publicAccess: Enabled
          waitAfterUpdate: true  
                
      - template: azure_pipelines/templates/terraform-outputs.yml
        parameters:
          azureServiceConnectionName: $(azure_service_principal_name)
          workingDirectory: $(System.DefaultWorkingDirectory)/terraform/infrastructure
          terraformVersion: ${{ variables.terraformVersion }}
          terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
          terraformSaName: ${{ variables.terraformSaName }}
          terraformBackendContainerName: ${{ variables.terraformBackendContainerName }} 

      - template: azure_pipelines/templates/azcli/aks-environment-stop-start.yml
        parameters:
          azureServiceConnectionName: $(azure_service_principal_name)
          aksClusterName: $(terraform_out_aks_cluster_name_main)
          aksClusterResourceGroup: $(terraform_out_aks_cluster_resource_group_name_main)
          workingDirectory: $(System.DefaultWorkingDirectory)
          action: stop

      - template: azure_pipelines/templates/azcli/psql-stop-start.yml
        parameters:
          azureServiceConnectionName: $(azure_service_principal_name)
          psqlName: $(terraform_out_psql_server_name)
          resourceGroup: $(paasResourceGroupName)
          workingDirectory: $(System.DefaultWorkingDirectory)
          action: stop       

      - template: azure_pipelines/templates/terraform-outputs.yml
        parameters:
          azureServiceConnectionName: $(azure_service_principal_name)
          workingDirectory: $(System.DefaultWorkingDirectory)/terraform/enablers
          terraformVersion: ${{ variables.terraformVersion }}
          terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
          terraformSaName: ${{ variables.terraformSaName }}
          terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}           

      - template: azure_pipelines/templates/azcli/aks-environment-stop-start.yml
        parameters:
          azureServiceConnectionName: $(azure_service_principal_name)
          aksClusterName: $(terraform_out_aks_devops_name)
          aksClusterResourceGroup: $(terraform_out_resource_group_name)
          workingDirectory: $(System.DefaultWorkingDirectory)
          action: stop   

      - template: azure_pipelines/templates/azcli/sa-update-public-network-access.yml
        parameters:
          azureServiceConnectionName: $(azure_service_principal_name)
          resourceGroupName:  ${{ variables.terraformResourceGroupName }}
          workingDirectory: $(System.DefaultWorkingDirectory)
          saName: ${{ variables.terraformSaName }}
          publicAccess: Disabled
          waitAfterUpdate: false
          condition: or (always(), canceled())       