parameters:
  - name: azureServiceConnectionName
    type: string
  - name: terraformVersion
    type: string
  - name: kubectlVersion
    type: string
  - name: helmVersion
    type: string
  - name: osmVersion
    displayName: Open Service Mesh CLI version to install
    type: string
    default: "1.2.4"
  - name: dependsOn
    type: object
    default: []
  - name: dnsZoneSubscriptionID
    displayName: Private DNS zone's for A records subscription ID
    type: string
  - name: dnsZoneResourceGroupName
    displayName: Private DNS zone's for A records resource group name
    type: string
  - name: resourceGroupName
    displayName: Environment resource group name
    type: string
  - name: terraformResourceGroupName
    displayName: Resource group for TF
    type: string
  - name: terraformSaName
    displayName: Storage Account name for TF
    type: string
  - name: terraformBackendContainerName
    displayName: Container name for TF
    type: string  
  - name: pool
    displayName: Agent pool
    type: string  
  - name: airflowTag
    displayName: version to deploy
    type: string      
  - name: pgBouncerTag       
    displayName: version to deploy  
    type: string
  - name: envoySidecarHelperTag
    displayName: Envoy Sidecar Helper image tag
    type: string
  - name: helmReleaseName
    displayName: Airflow Helm release name
    type: string
  - name: helmNamespace
    displayName: Airflow Helm release namespace
    type: string
  - name: ingressControllerName
    displayName: Ingress Controller name
    type: string
  - name: ingressControllerNamespace
    displayName: Ingress Controller namespace
    type: string
  # - name: verticaNamespace
  #   displayName: Vertica namespace
  #   type: string
  - name: saPublicAccessUpdate
    displayName: Storage Account Public Access Update
    type: boolean
    default: true
  - name: keyVaultName
    displayName: Key vault name
    type: string    
  - name: keyVaultSecretNames
    displayName: Key vault secret names
    type: object
  - name: condition
    displayName: Condition to run the stage
    type: string
    default: ""      
  - name: enablersModule
    displayName: Enablers module name
    type: string
  - name: infrastructureModule
    displayName: Infrastructure module name
    type: string
  - name: contentModule
    displayName: Content module name
    type: string
  - name: databricksPatTokenName
    displayName: Databricks Pat Token Name
    type: string
  - name: airflowViewerGroupName
    displayName: Airflow viewer group name
    type: string
  - name: airflowUserGroupName
    displayName: Airflow user group name
    type: string
  - name: airflowAdminGroupName
    displayName: Airflow admin group name
    type: string
  - name: vnetPeered
    displayName: Only for controlled enviroment flag
    type: string
  - name: mainEnvironmentDeployment
    displayName: Main enviroment flag - must be false for tenants deployments
    type: string
    default: "true"
  - name: maxParallelDags
    displayName: The maximum number of active DAG runs / tasks per DAG
    type: string   
    default: "16"
  - name: dagsPausedAtCreation
    displayName: Flag to pause all DAGs after creation
    type: string
    default: "false"
  - name: maxConcurency
    displayName: Max number of task instances that should run simultaneously on this airflow installation
    type: string   
    default: "32"
  - name: tenantName
    displayName: Tenant Airflow name - required only if deploying tenant instance
    type: string
    default:
  - name: ingressPath
    displayName: Subpath for Airflow URL
    type: string
    default:

stages:
  - stage: airflow_deployment
    dependsOn: ${{ parameters.dependsOn }}
    ${{ if ne(parameters.condition, '') }}:
      condition: ${{ parameters.condition }}
    displayName: Airflow deployment
    jobs:
      - job: airflow_deployment_install
        displayName: Install Airflow chart
        pool:
          ${{ if ne(parameters['pool'], 'ubuntu-latest') }}:
            name: ${{ parameters.pool }}
          ${{ if eq(parameters['pool'], 'ubuntu-latest') }}:
            vmImage: ${{ parameters.pool }}
        steps:
          - template: templates/airflow-steps.yml
            parameters:
              azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
              terraformVersion: ${{ parameters.terraformVersion }}
              kubectlVersion: ${{ parameters.kubectlVersion }}
              helmVersion: ${{ parameters.helmVersion }}
              osmVersion: ${{ parameters.osmVersion }}
              dnsZoneSubscriptionID: ${{ parameters.dnsZoneSubscriptionID }}
              dnsZoneResourceGroupName: ${{ parameters.dnsZoneResourceGroupName }}
              resourceGroupName: ${{ parameters.resourceGroupName }}
              terraformResourceGroupName: ${{ parameters.terraformResourceGroupName }}
              terraformSaName: ${{ parameters.terraformSaName }}
              terraformBackendContainerName: ${{ parameters.terraformBackendContainerName }}
              keyVaultName: ${{ parameters.keyVaultName }}
              keyVaultSecretNames: ${{ parameters.keyVaultSecretNames }}
              saPublicAccessUpdate: ${{ parameters.saPublicAccessUpdate }}
              airflowTag: ${{ parameters.airflowTag }}
              pgBouncerTag: ${{ parameters.pgBouncerTag }}
              envoySidecarHelperTag: ${{ parameters.envoySidecarHelperTag }}
              enablersModule: ${{ parameters.enablersModule }}
              infrastructureModule: ${{ parameters.infrastructureModule }}
              contentModule: ${{ parameters.contentModule }}
              helmReleaseName: ${{ parameters.helmReleaseName }}
              helmNamespace: ${{ parameters.helmNamespace }}
              ingressControllerName: ${{ parameters.ingressControllerName }}
              ingressControllerNamespace: ${{ parameters.ingressControllerNamespace }}
              # verticaNamespace: ${{ parameters.verticaNamespace }}
              databricksPatTokenName: ${{ parameters.databricksPatTokenName }}
              airflowViewerGroupName: ${{ parameters.airflowViewerGroupName }}
              airflowUserGroupName: ${{ parameters.airflowUserGroupName }}
              airflowAdminGroupName: ${{ parameters.airflowAdminGroupName }}
              vnetPeered: ${{ parameters.vnetPeered }}
              mainEnvironmentDeployment: ${{ parameters.mainEnvironmentDeployment }}
              maxParallelDags: ${{ parameters.maxParallelDags }}
              dagsPausedAtCreation: ${{ parameters.dagsPausedAtCreation }}
              maxConcurency: ${{ parameters.maxConcurency }}
              tenantName: ${{ parameters.tenantName }}
              ingressPath: ${{ parameters.ingressPath }}
