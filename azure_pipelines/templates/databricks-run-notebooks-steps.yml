parameters:
- name: azureServiceConnectionName
  type: string
- name: databricksHost
  type: string
- name: clusterId
  type: string
- name: databricksRemotePath
  type: string
- name: databricksViewerGroups
  type: string
- name: notebookName
  type: string
- name: environmentName
  type: string
- name: environmentNameUnityCatalogGroups
  type: string
- name: systemSchemaNames
  type: string
  default: 'init_common_tables'
- name: storageAccountName
  type: string
- name: wheelsCsvFile
  type: string
- name: wheelsPackagesRemoteFileStore
  type: string
- name: forceDelete
  type: boolean
- name: taskNameSubstring
  type: string
  default: ""
- name: initCommonTables
  type: boolean
  default: false

steps:
- template: databricks/databricks-init-common-tables.yml
  parameters:
    azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
    databricksHost: ${{ parameters.databricksHost }}
    clusterId: ${{ parameters.clusterId }}
    databricksRemotePath: ${{ parameters.databricksRemotePath }}
    notebookName: ${{ parameters.notebookName }}
    jobEnvironmentName: ${{ parameters.environmentName }}
    jobEnvironmentNameUnityCatalogGroups: ${{ parameters.environmentNameUnityCatalogGroups }}
    jobStorageAccountName: ${{ parameters.storageAccountName }}
    jobViewerGroups: ${{ parameters.databricksViewerGroups }}
    wheelsCsvFile: ${{ parameters.wheelsCsvFile }}
    wheelsPackagesRemoteFileStore: ${{ parameters.wheelsPackagesRemoteFileStore }}
    forceDelete: ${{ parameters.forceDelete }}
    initCommonTables: ${{ parameters.initCommonTables }}
    taskNameSubstring: "${{ parameters.taskNameSubstring }}_common"

- template: databricks/databricks-jobs-run-now.yml
  parameters:
    azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
    databricksHost: ${{ parameters.databricksHost }}
    jobIds: $(system_job_ids_common)
    taskNameSubstring: "${{ parameters.taskNameSubstring }}_common"

- template: databricks/databricks-runs-get-status.yml
  parameters:
    azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
    databricksHost: ${{ parameters.databricksHost }}
    runIds: $(run_ids)
    taskNameSubstring: "${{ parameters.taskNameSubstring }}_common"

- template: databricks/databricks-jobs-create-for-systems.yml
  parameters:
    azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
    databricksHost: ${{ parameters.databricksHost }}
    clusterId: ${{ parameters.clusterId }}
    databricksRemotePath: ${{ parameters.databricksRemotePath }}
    notebookName: ${{ parameters.notebookName }}
    jobEnvironmentName: ${{ parameters.environmentName }}
    jobEnvironmentNameUnityCatalogGroups: ${{ parameters.environmentNameUnityCatalogGroups }}
    jobSystemSchemaNames: "${{ parameters.systemSchemaNames }}"
    jobStorageAccountName: ${{ parameters.storageAccountName }}
    jobViewerGroups: ${{ parameters.databricksViewerGroups }}
    wheelsCsvFile: ${{ parameters.wheelsCsvFile }}
    wheelsPackagesRemoteFileStore: ${{ parameters.wheelsPackagesRemoteFileStore }}
    forceDelete: ${{ parameters.forceDelete }}
    initCommonTables: ${{ parameters.initCommonTables }}
    taskNameSubstring: ${{ parameters.taskNameSubstring }}

- template: databricks/databricks-jobs-run-now.yml
  parameters:
    azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
    databricksHost: ${{ parameters.databricksHost }}
    jobIds: $(system_job_ids)
    taskNameSubstring: ${{ parameters.taskNameSubstring }}

- template: databricks/databricks-runs-get-status.yml
  parameters:
    azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
    databricksHost: ${{ parameters.databricksHost }}
    runIds: $(run_ids)
    taskNameSubstring: ${{ parameters.taskNameSubstring }}

# --- This step currently not required ---
# - template: databricks/databricks-jobs-delete.yml
#   parameters:
#     databricksJobId: $(databricksJobId)