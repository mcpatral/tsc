parameters:
  - name: azureServiceConnectionName
    displayName: Azure Service Connection name
    type: string
  - name: schemaCommaSeparated
    displayName: Schema name separated by comma
    type: string
  - name: catalogName
    displayName: Databricks catalog name
    type: string
  - name: tablesCommaSeparated
    displayName: Exported databricks schema table separated by comma
    type: string
    
steps:
  - task: AzureCLI@2
    displayName: 'Delete tables from schema ${{ parameters.schemaCommaSeparated }} in catalog ${{ parameters.catalogName }}'
    inputs:
      azureSubscription: ${{ parameters.azureServiceConnectionName }}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Table values: ${{ parameters.tablesCommaSeparated }}"
        IFS=', ' read -ra schemas <<< "${{ parameters.schemaCommaSeparated }}"
        for schema in "${schemas[@]}"; do
          IFS=',' read -ra table_data <<< "${{ parameters.tablesCommaSeparated }}"
          for table in "${table_data[@]}"; do
            table_schema=$(echo "$table" | cut -d':' -f1)
            table_name=$(echo "$table" | cut -d':' -f2)
            if [ "$table_schema" == "$schema" ]; then
              full_table_name="${{ parameters.catalogName }}.$schema.$table_name"
              tables=$(databricks tables delete --full-name "$full_table_name")
              if [[ $? -ne 0 ]]; then
                echo "##vso[task.logissue type=error;]Unable to delete table $full_table_name. Please confirm that the specified table exists and that you have the necessary permissions to delete it. Ensure that no active processes or dependencies are associated with this table before attempting to delete. If the table is part of any ongoing transactions or has dependent objects, resolve those dependencies before proceeding with the deletion."
              else
                echo "Table $full_table_name deleted successfully."
              fi
            fi
          done
        done