parameters:
- name: azureServiceConnectionName
  type: string
- name: databricksHost
  type: string
- name: runIds
  type: string
- name: taskNameSubstring
  type: string
  default: ""
- name: condition
  displayName: Run conditions for task
  type: string
  default: ""

steps:
- task: AzureCLI@2
  name: "get_databricks_run_status_${{ parameters.taskNameSubstring }}"
  ${{ if ne(parameters.condition, '') }}:
    condition: ${{ parameters.condition }}
  displayName: "Get Databricks run status ${{ parameters.taskNameSubstring }}"
  inputs:
    azureSubscription: ${{ parameters.azureServiceConnectionName }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      IFS=',' read -ra databricksRunIds <<< "${{ parameters.runIds }}"
      for RUN_ID in "${databricksRunIds[@]}"; do
        if [[ -n "$RUN_ID" ]]
        then
          echo "The run Id $RUN_ID was successfully parsed."
        else
            echo "Failed to parse Databricks run id $RUN_ID, aborting."
            exit 1
        fi
      done

      allRunStatus="PENDING"
      while [[ $allRunStatus == *RUNNING* ]] || [[ $allRunStatus == *PENDING* ]] ||  [[ $allRunStatus == *null* ]]
      do
        sleep 15
        allRunStatus=""
        for RUN_ID in "${databricksRunIds[@]}"; do  
          runStatus=$(databricks jobs get-run $RUN_ID | jq -r '.state.result_state')
          if [[ $runStatus == SUCCESS ]]  || [[ $runStatus == null ]]
          then
            echo "$(date +"%H:%M:%S") The status of the run id $RUN_ID is $runStatus"
            allRunStatus+="$RUN_ID:$runStatus"
            allRunStatus+=","
          else
            echo "##vso[task.logissue type=error;]The following run ids have a FAILED result state $failedRuns"
            echo "##vso[task.complete result=Failed;done=true;]The following run ids have a FAILED result state $failedRuns"
            exit 1
          fi
        done
      done
      allFinalRunStatus="${allRunStatus}"
      
      echo ""

      IFS=',' read -ra allFinalRunJobStatus <<< "$allFinalRunStatus"
      for finalRunStatus in "${allFinalRunJobStatus[@]}"; do
        IFS=':' read -r runId status <<< "$finalRunStatus"
        echo "The final status of the run id $runId is $status at the time $(date +"%H:%M:%S")"
      done
  env:
    DATABRICKS_HOST: ${{ parameters.databricksHost }}