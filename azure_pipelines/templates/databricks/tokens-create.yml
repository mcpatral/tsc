parameters:
- name: lifetimeSeconds
  displayName: Lifetime in seconds
  type: number
  default: 7776000 #90 days
- name: comment
  displayName: Comment
  type: string
  default: "pipeline_token_rotation"
- name: condition
  displayName: Run conditions for task
  type: string
  default: ""

steps:
- task: Bash@3
  name: tokens_create
  displayName: Databricks tokens create
  ${{ if ne(parameters.condition, '') }}:
    condition: ${{ parameters.condition }}
  inputs:
    targetType: 'inline'
    script: |
      echo "Creating databricks token"
      token_output=$(databricks tokens create --lifetime-seconds ${{ parameters.lifetimeSeconds }} --comment ${{ parameters.comment }})
      if [[ $? -ne 0 ]]; then
        echo "$token_output"
        echo "##vso[task.logissue type=error;]error creating the token"
        exit 1
      fi
      token_id_output=$(echo "$token_output" | jq -r '.token_info.token_id')
      echo "New token Id: $token_id_output"
      echo "##vso[task.setvariable variable=token_value_env;isSecret=true]$(echo "$token_output" | jq -r '.token_value')"
      echo "##vso[task.setvariable variable=token_id_env]$token_id_output"
      echo "##vso[task.setvariable variable=token_id_output;isOutput=true]$token_id_output"