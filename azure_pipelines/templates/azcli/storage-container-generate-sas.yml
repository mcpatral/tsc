parameters:
- name: azureServiceConnectionName
  displayName: Azure Service Connection Name
  type: string
- name: storageAccountName
  displayName: Source Storage Account Name
  type: string
- name: containerName
  displayName: Container Name
  type: string
- name: permissions #Its value is a string with any of these letters: (a)dd (c)reate (d)elete (e)xecute (f)ilter_by_tags (i)set_immutability_policy (l)ist (m)ove (r)ead (t)ag (w)rite (x)delete_previous_version (y)permanent_delete
  displayName: SAS permissions
  type: string
- name: minutes
  displayName: Minutes for SAS token
  type: string
- name: sasStringVarName
  displayName: SAS String Variable Name
  type: string
- name: condition
  displayName: Run conditions for task
  type: string
  default: ""
- name: workingDirectory
  displayName: Azure CLI working directory
  type: string

steps:
- task: AzureCLI@2
  displayName: Storage container generate-sas
  ${{ if ne(parameters.condition, '') }}:
    condition: ${{ parameters.condition }}
  inputs:
    azureSubscription: ${{ parameters.azureServiceConnectionName }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      end=`date -u -d "${{ parameters.minutes }} minutes" '+%Y-%m-%dT%H:%MZ'`
      sas_string=`az storage container generate-sas --account-name ${{ parameters.storageAccountName }} --name ${{ parameters.containerName }} --https-only --permissions ${{ parameters.permissions }} --expiry $end -o tsv`
      if [[ $? -ne 0 ]]; then
        echo "##vso[task.logissue type=error;]error creating the container sas string for the storage account ${{ parameters.storageAccountName }} and the container ${{ parameters.containerName }}"
        exit 1
      fi
      echo "##vso[task.setvariable variable=${{ parameters.sasStringVarName }};issecret=true]$sas_string"
    workingDirectory: ${{ parameters.workingDirectory }}