parameters:
  - name: calicoVersion
    displayName: Calico CLI version to install
    type: string
  - name: calicoNamespace
    displayName: Calico Namespace name
    type: string
  - name: osmVersion
    displayName: Open Service Mesh CLI version to install
    type: string
    default: "1.2.4"
  - name: osmNamespace
    displayName: Open Service Mesh Namespace name
    type: string
  - name: addIngressConfig
    displayName: Add Ingress configuration to Open Service Mesh
    type: boolean
    default: false
  - name: ingressClientCertSecretName
    displayName: OSM generated ingress controller client certificate secret name
    type: string
    default: osm-ingress-client-cert
  - name: ingressNamespace
    displayName: Ingress Controller Namespace name
    type: string
    default: ""
  - name: ingressReleaseName
    displayName: Ingress Controller Helm Release name
    type: string
    default: ""

steps:
  - template: utils/binary-install.yml
    parameters:
      binaryName: kubectl-calico
      binaryVersion: ${{ parameters.calicoVersion }}
      validationCommand: kubectl-calico version

  - template: kubectl/calico-cli-command.yml
    parameters:
      command: patch
      args: >
        FelixConfiguration default
        --patch=$(jq -c '.' felixconfiguration-default-patch.json) 
        --type merge
      workingDirectory: $(System.DefaultWorkingDirectory)/kubernetes/calico/

  - template: kubectl/patch.yml
    parameters:
      resourceToPatch: meshconfig/osm-mesh-config
      patchFile: osm-mesh-config-patch.yml
      namespace: ${{ parameters.osmNamespace }}
      workingDirectory: $(System.DefaultWorkingDirectory)/kubernetes/osm/
  
  - ${{ if parameters.addIngressConfig }}:
    - template: kubectl/patch.yml
      parameters:
        resourceToPatch: meshconfig/osm-mesh-config
        patchInline: >-
          {
            "spec": {
              "certificate": {
                "ingressGateway": {
                  "secret": {
                    "name": "${{ parameters.ingressClientCertSecretName }}",
                    "namespace": "${{ parameters.osmNamespace }}"
                  },
                  "subjectAltNames": [
                    "${{ parameters.ingressReleaseName }}.${{ parameters.ingressNamespace }}.cluster.local"
                  ],
                  "validityDuration": "24h"
                }
              }
            }
          }
        namespace: ${{ parameters.osmNamespace }}
        workingDirectory: $(System.DefaultWorkingDirectory)

    - template: utils/binary-install.yml
      parameters:
        binaryName: osm
        binaryVersion: ${{ parameters.osmVersion }}
        validationCommand: osm version

    - template: osm/enable-disable-namespace.yml
      parameters:
        namespace: ${{ parameters.ingressNamespace }}
        action: add
        args: --disable-sidecar-injection
        workingDirectory: $(System.DefaultWorkingDirectory)
