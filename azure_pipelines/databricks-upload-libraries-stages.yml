parameters:
  - name: azureServiceConnectionName
    type: string
  - name: terraformVersion
    type: string
  - name: terraformResourceGroupName
    displayName: Resource group for Terraform state of environment
    type: string
  - name: terraformSaName
    displayName: Storage Account name for Terraform state of environment
    type: string
  - name: terraformBackendContainerName
    displayName: SA Container name for Terraform state of environment
    type: string
  - name: mainResourceGroupName
    type: string
  - name: infrastructureModule
    type: string
  - name: csvFilePath
    type: string
  - name: devopsRepositoryCheckout
    type: string
  - name: sharedResourcesRepositoryCheckout
    type: string
  - name: artifactsDirectoryPath
    type: string
  - name: databricksPackageUploadPath
    type: string
  - name: pool
    type: string
  - name: dependsOn
    type: object
    default: []
  - name: condition
    displayName: Condition to run the stage
    type: string
    default: ""

stages:
- stage: databricks_uploading_libraries
  displayName: 'Upload libraries to Databricks'
  dependsOn: ${{ parameters.dependsOn }}
  ${{ if ne(parameters.condition, '') }}:
    condition: ${{ parameters.condition }}
  jobs:
  - job: databricks_uploading_libraries
    displayName: 'Upload libraries to Databricks'
    pool: 
      ${{ if ne(parameters['pool'], 'ubuntu-latest') }}:
        name: ${{ parameters.pool }}
      ${{ if eq(parameters['pool'], 'ubuntu-latest') }}:
        vmImage: ${{ parameters.pool }}
    steps:
      - checkout: ${{ parameters.devopsRepositoryCheckout }}
        path: s/
      - checkout: ${{ parameters.sharedResourcesRepositoryCheckout }}
        path: s/${{ parameters.sharedResourcesRepositoryCheckout }}
    
      - task: PipAuthenticate@1
        inputs:
          artifactFeeds: "$(project_name)/$(common_feed_name)"
        displayName: 'Authentication to azure feed'

      - template: templates/terraform-outputs.yml
        parameters:
          azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
          workingDirectory: $(System.DefaultWorkingDirectory)/terraform/${{ parameters.infrastructureModule }}
          terraformVersion: ${{ parameters.terraformVersion }}
          terraformResourceGroupName: ${{ parameters.terraformResourceGroupName }}
          terraformSaName: ${{ parameters.terraformSaName }}
          terraformBackendContainerName: ${{ parameters.terraformBackendContainerName }}

      - template: templates/databricks/databricks-installation-and-login.yml
        parameters:
          azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
          resourceGroupName: ${{ parameters.mainResourceGroupName }}
          databricksWorkspaceName: $(terraform_out_db_workspace_name)

      - template: templates/databricks/databricks-libraries-upload-from-csv.yml
        parameters:
          azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
          csvFilePath: ${{ parameters.csvFilePath }}
          artifactsDirectoryPath: ${{ parameters.artifactsDirectoryPath }}
          databricksPackageUploadPath: ${{ parameters.databricksPackageUploadPath }}
