parameters:
- name: environmentName
  displayName: Environment variable group name
  type: string
- name: usePairInfrastructure
  displayName: Use Pair Infrastructure
  default: false
  type: boolean
- name: rotatePostgresCredentials
  type: boolean
  default: true
  displayName: Rotate Postgres credentials
# - name: rotateVerticaCredentials
#   type: boolean
#   default: true
#   displayName: Rotate Vertica credentials
- name: rotateAirflowCredentials
  type: boolean
  default: true
  displayName: Rotate Airflow credentials
- name: rotateDatabricksCredentials
  type: boolean
  default: true
  displayName: Rotate Databricks credentials

variables:
- group: ${{ parameters.environmentName }}
- name: terraformVersion
  value: "1.5.0"
- name: kubectlVersion
  value: "1.27.3"
- name: helmVersion
  value: "3.12.1"
- name: terraformResourceGroupName
  value: rg-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-state
- name: terraformSaName
  value: sa$(terraform_in_environment_type)$(terraform_in_project)$(terraform_in_location_short)tfstate
- name: terraformBackendContainerName
  value: $(terraform_in_environment_type)tfstate
- name: masterKeyVaultName
  value: kv-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-master
- name: mainKeyVaultName
  value: kv-$(terraform_in_environment_type)-$(terraform_in_project)-$(terraform_in_location_short)-main
- ${{ if eq(parameters.usePairInfrastructure, false) }}:
  - name: azureDevOpsPool
    value: ${{ parameters.environmentName }}-agentpool
  - name: enablersModule
    value: enablers
  - name: infrastructureModule
    value: infrastructure
  - name: databricksAirflowPatTokenName
    value: 'airflowdbwpattoken'
  - name: saAirflowKeyName
    value: 'saairflowkey'
- ${{ if eq(parameters.usePairInfrastructure, true) }}:
  - name: azureDevOpsPool
    value: ${{ parameters.environmentName }}-pair-agentpool
  - name: enablersModule
    value: pair_enablers
  - name: infrastructureModule
    value: pair_infrastructure
  - name: databricksAirflowPatTokenName
    value: 'airflowdbwpattokenpair'
  - name: saAirflowKeyName
    value: 'saairflowkeypair'

trigger: none
  
stages: 
- ${{ if or(eq(parameters.rotatePostgresCredentials, true), eq(parameters.rotateAirflowCredentials, true)) }}:
  - template: azure_pipelines/rotate-credentials-stages.yml
    parameters:
      azureServiceConnectionName: $(azure_service_principal_name)
      pool: ${{ variables.azureDevOpsPool }}
      mainKeyVaultName: ${{ variables.mainKeyVaultName }}
      masterKeyVaultName: ${{ variables.masterKeyVaultName }}
      keyVaultSecretNames:
        - ${{ if eq(parameters.rotatePostgresCredentials, true) }}:
          - psqladminuser
          - psqladminpwd
        # - ${{ if eq(parameters.rotateVerticaCredentials, true) }}:
        #   - verticatlskey
        #   - verticatlscrt
        #   - verticatlscakey
        #   - verticatlscacrt
        #   - verticatlswebhookkey
        #   - verticatlswebhookcrt
        #   - verticasupassword
        - ${{ if eq(parameters.rotateAirflowCredentials, true) }}:
          # - verticadbwritername
          # - verticadbwriterpassword   
          - airflowoauthspnclientid
          - airflowoauthspnclientsecret
          - airflowtenantid         
          - psqlairflowuser
          - psqlairflowpwd
          - airflowfernetkey
          - airflowpwd 
        - ${{ if eq(parameters.rotateDatabricksCredentials, true) }}:
          - databrickadmins

# - ${{ if eq(parameters.rotateVerticaCredentials, true) }}:
#   - template: azure_pipelines/vertica-stages.yml
#     parameters:
#       pool: ${{ variables.azureDevOpsPool }} 
#       azureServiceConnectionName: $(azure_service_principal_name)
#       terraformVersion: ${{ variables.terraformVersion }}
#       kubectlVersion: ${{ variables.kubectlVersion }}
#       helmVersion: ${{ variables.helmVersion }}
#       helmReleaseName: $(vertica_helm_release_name)
#       helmNamespace: $(vertica_namespace)
#       airflowNamespace: $(airflow_namespace)
#       resourceGroupName: $(mainResourceGroupName)
#       dnsZoneSubscriptionID: $(private_dns_zone_subscription_id)
#       dnsZoneResourceGroupName: $(private_dns_zone_resource_group)
#       terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
#       terraformSaName: ${{ variables.terraformSaName }}
#       terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}
#       keyVaultName: ${{ variables.mainKeyVaultName }}
#       keyVaultSecretNames: 
#         - verticatlskey
#         - verticatlscrt
#         - verticatlscakey
#         - verticatlscacrt
#         - verticatlswebhookkey
#         - verticatlswebhookcrt
#         - verticasupassword
#         - saverticakey
#       saPublicAccessUpdate: false
#       verticaTag: $(vertica_tag)
#       verticaLoggerTag: $(vertica_logger_tag)
#       verticaOperatorTag: $(vertica_operator_tag)
#       enablersModule: ${{ variables.enablersModule }}
#       infrastructureModule: ${{ variables.infrastructureModule }}
#       condition: and(not(failed()), not(canceled()))
#       dependsOn:
#         - rotate_credentials

- ${{ if or(eq(parameters.rotatePostgresCredentials, true), eq(parameters.rotateAirflowCredentials, true), eq(parameters.rotateDatabricksCredentials, true))  }}:
  - template: azure_pipelines/airflow-stages.yml
    parameters:
      pool: ${{ variables.azureDevOpsPool }} 
      azureServiceConnectionName: $(azure_service_principal_name)
      terraformVersion: ${{ variables.terraformVersion }}
      kubectlVersion: ${{ variables.kubectlVersion }}
      helmVersion: ${{ variables.helmVersion }}
      osmVersion: $(osm_version)
      dnsZoneSubscriptionID: $(private_dns_zone_subscription_id)
      dnsZoneResourceGroupName: $(private_dns_zone_resource_group)
      terraformResourceGroupName: ${{ variables.terraformResourceGroupName }}
      terraformSaName: ${{ variables.terraformSaName }}
      terraformBackendContainerName: ${{ variables.terraformBackendContainerName }}
      keyVaultName: ${{ variables.mainKeyVaultName }}
      keyVaultSecretNames:
        # - verticadbwritername
        # - verticadbwriterpassword  
        - airflowoauthspnclientid
        - airflowoauthspnclientsecret
        - airflowtenantid    
        - psqlairflowuser
        - psqlairflowpwd
        - airflowfernetkey
        - airflowpwd 
        - ${{ variables.databricksAirflowPatTokenName }}
        - ${{ variables.saAirflowKeyName }}
        - clienttlskey
        - clienttlscrt
        - airflowsmtpclientsecret
        - airflowsmtpclientid
      saPublicAccessUpdate: false
      airflowTag: $(airflow_tag)
      pgBouncerTag: $(pg_bouncer_tag)
      envoySidecarHelperTag: $(envoy_helper_tag)
      helmReleaseName: $(airflow_helm_release_name)
      helmNamespace: $(airflow_namespace)
      ingressControllerName: $(ingress_helm_release_name)
      ingressControllerNamespace: $(ingress_namespace)
      # verticaNamespace: $(vertica_namespace)
      enablersModule: ${{ variables.enablersModule }}
      infrastructureModule: ${{ variables.infrastructureModule }}
      databricksPatTokenName: ${{ variables.databricksAirflowPatTokenName }}
      airflowViewerGroupName: $(airflow_viewer_group_name)
      airflowUserGroupName: $(airflow_user_group_name)
      airflowAdminGroupName: $(airflow_admin_group_name)
      vnetPeered: $(terraform_in_vnet_peered)
      condition: and(not(failed()), not(canceled()))
      dependsOn:
        - rotate_credentials
        # - ${{ if eq(parameters.rotateVerticaCredentials, true) }}:
          # - vertica_deployment